<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xik.aibookkeeping.server.mapper.BillMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xik.aibookkeeping.pojo.entity.Bill">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="type" property="type" />
        <result column="category_id" property="categoryId" />
        <result column="amount" property="amount" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_user" property="createUser" />
        <result column="update_user" property="updateUser" />
        <result column="is_deleted" property="isDeleted" />
        <result column="is_auto_generated" property="isAutoGenerated" />
        <result column="ai_confidence" property="aiConfidence" />
        <result column="ai_analysis" property="aiAnalysis" />
    </resultMap>

    <select id="pageQuery" resultType="com.xik.aibookkeeping.pojo.vo.BillVO">
        SELECT
        b.id AS id,
        b.user_id,
        u.nickname,
        b.type,
        c.id AS category_id,
        c.category,
        b.amount,
        b.remark,
        b.create_time,
        b.update_time,
        b.create_user,
        b.update_user,
        b.is_auto_generated,
        b.ai_confidence,
        b.ai_analysis,
        b.bill_time
        FROM bill b
        LEFT JOIN category c ON b.category_id = c.id
        LEFT JOIN user u ON b.user_id = u.id
        <where>
            b.is_deleted = 0
            <if test="billPageQueryDTO.id != null and billPageQueryDTO.id != ''">
                AND b.id = #{billPageQueryDTO.id}
            </if>
            <if test="billPageQueryDTO.nickname != null and billPageQueryDTO.nickname != ''">
                AND u.nickname like CONCAT('%', #{billPageQueryDTO.nickname}, '%')
            </if>
            <if test="billPageQueryDTO.type != null and billPageQueryDTO.type != ''">
                AND b.type = #{billPageQueryDTO.type}
            </if>
            <if test="billPageQueryDTO.category != null">
                AND c.category like  CONCAT('%', #{billPageQueryDTO.category}, '%')
            </if>
            <if test="billPageQueryDTO.amount != null">
                AND b.amount = #{billPageQueryDTO.amount}
            </if>
            <if test="billPageQueryDTO.remark != null and billPageQueryDTO.remark != ''">
                AND b.remark LIKE CONCAT('%', #{billPageQueryDTO.remark}, '%')
            </if>
            <if test="billPageQueryDTO.selectTime != null">
                AND DATE(b.create_time) = #{billPageQueryDTO.selectTime}
            </if>
            <if test="billPageQueryDTO.isAutoGenerated != null">
                AND b.is_auto_generated = #{billPageQueryDTO.isAutoGenerated}
            </if>
            <if test="billPageQueryDTO.startTime != null">
                <![CDATA[ AND b.bill_time >= #{billPageQueryDTO.startTime} ]]>
            </if>
            <if test="billPageQueryDTO.endTime != null">
                <![CDATA[ AND b.bill_time <= #{billPageQueryDTO.endTime} ]]>
            </if>
        </where>
        ORDER BY b.bill_time DESC
    </select>

    <select id="queryById" resultType="com.xik.aibookkeeping.pojo.vo.BillVO">
        SELECT
        b.id AS id,
        b.user_id,
        u.nickname,
        b.type,
        c.id AS category_id,
        c.category,
        b.amount,
        b.remark,
        b.create_time,
        b.update_time,
        b.create_user,
        b.update_user,
        b.is_auto_generated,
        b.ai_confidence,
        b.ai_analysis,
        b.bill_time
        FROM bill b
        LEFT JOIN category c ON b.category_id = c.id
        LEFT JOIN user u ON b.user_id = u.id
        where b.id = #{id} and b.is_deleted = 0
    </select>

    <select id="getUserBillById" resultType="com.xik.aibookkeeping.pojo.vo.BillUserVO">
        SELECT
            b.id AS id,
            b.type,
            c.category,
            b.amount,
            b.remark,
            b.create_time,
            b.update_time,
            b.is_auto_generated,
            b.ai_confidence,
            b.ai_analysis,
            b.bill_time
        FROM category c
        LEFT JOIN bill b  ON b.category_id = c.id
        where b.id = #{id} and b.is_deleted = 0
    </select>

    <select id="pageUserQuery" resultType="com.xik.aibookkeeping.pojo.vo.BillUserVO">
        SELECT
        b.id AS id,
        b.type,
        c.category,
        b.amount,
        b.remark,
        b.create_time,
        b.update_time,
        b.is_auto_generated,
        b.ai_confidence,
        b.ai_analysis,
        b.bill_time
        FROM bill b
        LEFT JOIN category c ON b.category_id = c.id
        <where>
            b.is_deleted = 0 and b.user_id = #{billUserPageQueryDTO.userId}
            <if test="billUserPageQueryDTO.type != null and billUserPageQueryDTO.type != ''">
                AND b.type = #{billUserPageQueryDTO.type}
            </if>
            <if test="billUserPageQueryDTO.category != null and billUserPageQueryDTO.category != ''">
                AND c.category = #{billUserPageQueryDTO.category}
            </if>
            <if test="billUserPageQueryDTO.amount != null">
                AND b.amount = #{billUserPageQueryDTO.amount}
            </if>
            <if test="billUserPageQueryDTO.remark != null and billUserPageQueryDTO.remark != ''">
                AND b.remark LIKE CONCAT('%', #{billUserPageQueryDTO.remark}, '%')
            </if>
            <if test="billUserPageQueryDTO.selectTime != null">
                AND DATE(b.bill_time) = #{billUserPageQueryDTO.selectTime}
            </if>
            <if test="billUserPageQueryDTO.isAutoGenerated != null and billUserPageQueryDTO.isAutoGenerated != ''">
                AND b.is_auto_generated = #{billUserPageQueryDTO.isAutoGenerated}
            </if>
            <if test="billUserPageQueryDTO.startTime != null">
                <![CDATA[ AND b.bill_time >= #{billUserPageQueryDTO.startTime} ]]>
            </if>
            <if test="billUserPageQueryDTO.endTime != null">
                <![CDATA[ AND b.bill_time <= #{billUserPageQueryDTO.endTime} ]]>
            </if>
        </where>
        ORDER BY b.bill_time DESC
    </select>

    <select id="getBillAmount" resultType="com.xik.aibookkeeping.pojo.vo.BillAmountVO">
        SELECT
            SUM(CASE WHEN b.type = 'expenditures' THEN b.amount ELSE 0 END) AS expendituresAmount,
            SUM(CASE WHEN b.type = 'revenue' THEN b.amount ELSE 0 END) AS revenueAmount,
            SUM(CASE WHEN b.type = 'notRecorded' THEN b.amount ELSE 0 END) AS taxAmount
        FROM
            bill b
        LEFT JOIN
            category c ON b.category_id = c.id
        WHERE
            b.user_id = #{userId}
        AND b.is_deleted = 0
        /* 收支类型条件 */
        <if test="type != null and type != ''">
            AND b.type = #{type}
        </if>
        /* 分类条件 */
        <if test="categoryId != null">
            AND b.category_id = #{categoryId}
        </if>
        /* 时间范围条件 - 开始时间 */
        <if test="startTime != null">
            <![CDATA[ AND b.bill_time >= #{startTime} ]]>
        </if>
        /* 时间范围条件 - 结束时间 */
        <if test="endTime != null">
            <![CDATA[ AND b.bill_time <= #{endTime} ]]>
        </if>
    </select>

    <select id="getBillStructure" resultType="com.xik.aibookkeeping.pojo.vo.BillStructureVO">
        SELECT
            b.type,
            c.category AS category,
            SUM(CASE WHEN b.type = 'revenue' THEN b.amount ELSE 0 END) AS revenueAmount,
            SUM(CASE WHEN b.type = 'expenditures' THEN b.amount ELSE 0 END) AS expendituresAmount,
            SUM(CASE WHEN b.type = 'notRecorded' THEN b.amount ELSE 0 END) AS taxAmount
        FROM
            bill b
        LEFT JOIN
            category c ON b.category_id = c.id
        WHERE
            b.is_deleted = 0
        AND b.user_id = #{userId}
            <if test="type != null">
                AND b.type = #{type}
            </if>
            <if test="categoryId != null">
                AND b.category_id = #{categoryId}
            </if>
            <if test="startTime != null">
                <![CDATA[ AND b.bill_time >= #{startTime} ]]>
            </if>
            <if test="endTime != null">
                <![CDATA[ AND b.bill_time <= #{endTime} ]]>
            </if>
        GROUP BY
            b.type, c.id, c.category
            ORDER BY
                b.type,
                CASE
                WHEN b.type = 'revenue' THEN SUM(CASE WHEN b.type = 'revenue' THEN b.amount ELSE 0 END)
                WHEN b.type = 'expenditures' THEN SUM(CASE WHEN b.type = 'expenditures' THEN b.amount ELSE 0 END)
                ELSE SUM(CASE WHEN b.type = 'notRecorded' THEN b.amount ELSE 0 END)
                END DESC
    </select>

</mapper>
